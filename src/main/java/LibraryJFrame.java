
import Library.Abonement;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Анна
 */
public class LibraryJFrame extends javax.swing.JFrame {

    /**
     * Creates new form LibraryJFrame
     */
    public LibraryJFrame() {
        initComponents();
        customizeJTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Библиотека");

        jScrollPane2.setViewportView(jTree);

        jScrollPane1.setViewportView(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    private void customizeJTree() {
    HashMap<String, ArrayList<String>> TutorRus = Abonement.tutorToRusBooks;
    HashMap<String, ArrayList<String>> TutorEng = Abonement.tutorToEngBooks;
    HashMap<String, ArrayList<String>> StudRus = Abonement.studentToRusBooks;
    HashMap<String, ArrayList<String>> StudEng = Abonement.studentToEngBooks; 
    DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode("Все абонементы");
    DefaultMutableTreeNode teachersNode = new DefaultMutableTreeNode("Преподаватели");
    DefaultMutableTreeNode studentsNode = new DefaultMutableTreeNode("Студенты");

    // Добавляем узлы "Преподаватели" и "Студенты" к корневому узлу
    rootNode.add(teachersNode);
    rootNode.add(studentsNode);
for (String teacher : TutorRus.keySet()) {
        DefaultMutableTreeNode teacherNode = new DefaultMutableTreeNode(teacher);
        DefaultMutableTreeNode russianNode = new DefaultMutableTreeNode("Русский");
        DefaultMutableTreeNode englishNode = new DefaultMutableTreeNode("Английский");

        // Добавляем узлы "Русский" и "Английский" к узлу преподавателя
        teacherNode.add(russianNode);
        teacherNode.add(englishNode);

        ArrayList<String> rusBooks = TutorRus.get(teacher);
        ArrayList<String> engBooks = TutorEng.get(teacher);
        // Добавляем узлы для каждой книги в соответствующие языковые поддеревья
        for (String book : rusBooks) {
            russianNode.add(new DefaultMutableTreeNode(book));
        }
        for (String book : engBooks) {
            englishNode.add(new DefaultMutableTreeNode(book));
        }

        // Добавляем узел преподавателя к узлу "Преподаватели"
        teachersNode.add(teacherNode);
    }
for (String student : StudRus.keySet()) {
        DefaultMutableTreeNode studentNode = new DefaultMutableTreeNode(student);
        DefaultMutableTreeNode russianNode = new DefaultMutableTreeNode("Русский");
        DefaultMutableTreeNode englishNode = new DefaultMutableTreeNode("Английский");

        // Добавляем узлы "Русский" и "Английский" к узлу студента
        studentNode.add(russianNode);
        studentNode.add(englishNode);

        // Получаем списки книг для данного студента на русском и английском языках
        ArrayList<String> rusBooks = StudRus.get(student);
        ArrayList<String> engBooks = StudEng.get(student);

        // Добавляем узлы для каждой книги в соответствующие языковые поддеревья
        for (String book : rusBooks) {
            russianNode.add(new DefaultMutableTreeNode(book));
        }
        for (String book : engBooks) {
            englishNode.add(new DefaultMutableTreeNode(book));
        }

        // Добавляем узел студента к узлу "Студенты"
        studentsNode.add(studentNode);
    }

    // Создаем модель дерева и устанавливаем его для JTree
    DefaultTreeModel treeModel = new DefaultTreeModel(rootNode);
    jTree.setModel(treeModel);
}
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibraryJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree;
    // End of variables declaration//GEN-END:variables
}
